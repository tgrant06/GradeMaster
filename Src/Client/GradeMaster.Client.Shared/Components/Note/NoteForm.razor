<div class="border-top generic-devider-line" style="margin-top: -1px"></div>
@if (FormType == FormType.Edit)
{
    <h4 style="margin-bottom: 25px; margin-top: 10px; max-width: 1100px;">@FormTitle: @Note?.Title | Color: @(Note?.Color.Name + Note?.Color.Symbol)</h4>
}
else
{
    <div style="margin-top: 25px;"></div>
}
<EditForm OnValidSubmit="HandleValidSubmit" OnInvalidSubmit="HandleInvalidSubmit" EditContext="_editContext">
    <DataAnnotationsValidator />
    <Card Style="max-width: 1050px; border: none;">
        <!-- Title Field -->
        <div class="form-group row mb-3">
            <label class="col-md-2 col-form-label nowrap" for="noteTitle">
                <strong>Title: <span class="text-danger">*</span></strong>
            </label>
            <div class="col-md-10">
                <InputText  @bind-Value="NewNote.Title" id="noteTitle" class="form-control" placeholder="Enter the note title" />
                <ValidationMessage For="@(() => NewNote.Title)" />
            </div>
        </div>
        <div class="form-group row mb-3">
            <label class="col-md-2 col-form-label nowrap" for="noteTags">Tags:</label>
            <div class="col-md-10">
                <InputText @bind-Value="NewNote.Tags" id="noteTags" class="form-control" placeholder="Enter the note tags" />
                <ValidationMessage For="@(() => NewNote.Tags)" />
            </div>
        </div>

        <!-- Color Field -->
        <div class="form-group row mb-3">
            <label class="col-md-2 col-form-label nowrap" for="selectFieldColor"><strong>Color: <span class="text-danger">*</span></strong></label>
            <div class="col-md-10">
                <select class="form-select" style="max-width: 200px" aria-label="Select Color" name="selectFieldColor" id="selectFieldColor"
                        @bind="SelectedColorId">
                    <option value="0" style="/* display: none; */" class="gm-option">Select Color</option>
                    @foreach (var color in Colors)
                    {
                        <option @key="@($"$col_{color.Id}")" value="@color.Id" class="gm-option">@color.Symbol @color.Name</option>
                    }
                </select>
                <ValidationMessage For="@(() => NewNote.Color)" />
            </div>
        </div>

        <!-- IsPinned Field -->
        <div class="form-group row mb-3">
            <label class="col-md-2 col-form-label nowrap" for="isPinned"><strong>Pinned: <span class="text-danger">*</span></strong></label>
            <div class="col-md-10 ps-3 pt-2">
                @* <label class="col-form-label nowrap" for="isPinned">
                    <strong>Is Pinned 📌: <span class="text-danger">*</span></strong>
                </label> *@
                <div class="form-check">
                    <InputCheckbox @bind-Value="NewNote.IsPinned" id="isPinned" class="form-check-input" />
                    <label class="form-check-label" for="isPinned">
                        @(NewNote.IsPinned ? "Pinned📌" : "Unpinned")
                    </label>
                </div>
                <ValidationMessage For="@(() => NewNote.IsPinned)" />
            </div>
        </div>
        
        <!-- IsArchived Field -->
        <div class="form-group row mb-4">
            <label class="col-md-2 col-form-label nowrap" for="isArchived"><strong>Archived: <span class="text-danger">*</span></strong></label>
            <div class="col-md-10 ps-3 pt-2">
                @* <label class="col-form-label nowrap" for="isArchived">
                    <strong>Is Archived <i class="bi bi-archive"></i>: <span class="text-danger">*</span></strong>
                </label> *@
                <div class="form-check">
                    <InputCheckbox @bind-Value="NewNote.IsArchived" id="isArchived" class="form-check-input" disabled="@(FormType == FormType.Create)"/>
                    <label class="form-check-label" for="isArchived">
                        @if (NewNote.IsArchived)
                        {
                            <span>Archived <i class="bi bi-archive"></i></span>
                        }
                        else
                        {
                            <span>Unarchived</span>
                        }
                    </label>
                </div>
                <ValidationMessage For="@(() => NewNote.IsArchived)" />
            </div>
        </div>

        <!-- Content Field -->
        <div class="form-group row mb-3">
            <label class="col-md-2 col-form-label nowrap" for="content">Content:</label>
            <div class="col-md-10">
                <Tabs>
                    <Tab Title="Write" Active="true" Id="writeTab">
                        <Content>
                            <div class="border border-top-0 bg-body-tertiary" style="border-radius: 0 0 12px 12px;">
                                <div class="p-2">
                                    <InputTextArea @bind-Value="NewNote.Content" id="content" class="form-control gm-active-resizing-textarea" rows="4" placeholder="Enter the note content" style="max-height: calc(100vh - 248px); min-height: 206px; /* resize: none; */"/>
                                    <ValidationMessage For="@(() => NewNote.Content)"/>
                                </div>
                            </div>
                        </Content>
                    </Tab>
                    <Tab Title="Preview" Id="previewTab">
                        <Content>
                            <div class="border border-top-0 bg-body-tertiary" style="border-radius: 0 0 12px 12px;">
                                <div Class="p-2">
                                    <Card Style="--bs-card-border-color: var(--bs-border-color);">
                                        <CardBody Style="padding: 0 12px !important; padding-right: 0 !important;">
                                            <Markdown Id="markdownContent" TableCssClass="table table-hover table-bordered" Class="enabled-text-selection enabled-text-selection-and-children transform-stack-container" Style="overflow: auto; max-height: calc(100vh - 250px); min-height: 204px; padding-top: 6px; padding-bottom: 6px; padding-right: 12px;">@NewNote.Content</Markdown>
                                        </CardBody>
                                    </Card>
                                    <ValidationMessage For="@(() => NewNote.Content)" />
                                </div>
                            </div>
                        </Content>
                    </Tab>
                </Tabs>
            </div>
        </div>

        <div class="border-top generic-devider-line" style="margin-top: 15px"></div>

        <!-- Buttons -->
        <div class="d-flex justify-content-between my-3">
            <Button Type="ButtonType.Button" Color="ButtonColor.Primary" @onclick="Cancel"><Icon Name="IconName.ArrowLeft" /> Cancel</Button>
            <Button Type="ButtonType.Submit" Color="ButtonColor.Success" Id="formSubmitBtn">Save <Icon Name="IconName.Floppy" /></Button>
        </div>
    </Card>
</EditForm>

<style>
    .nowrap {
        white-space: nowrap;
    }

    #scrollToTopButton {
        display: none !important;
    }

    textarea.valid.modified {
        outline: none !important;
    }

    .nav-tabs .nav-item.show .nav-link, .nav-tabs .nav-link.active {
        --bs-bg-opacity: 1;
        background-color: rgba(var(--bs-tertiary-bg-rgb), var(--bs-bg-opacity)) !important;
        border-bottom-color: rgba(var(--bs-tertiary-bg-rgb), var(--bs-bg-opacity)) !important;
    }

    #markdownContent a, #markdownContent button {
        pointer-events: none;
        cursor: default;
    }

    #markdownContent a {
        text-underline-offset: 0.1em;
    }

    #markdownContent img {
        max-width: 100%;
        border-radius: 5px;
        /* border: 1px solid var(--bs-secondary-border-subtle); */
    }

    pre:has(code) {
        padding: 12px;
        border-radius: 5px;
        background-color: var(--bs-secondary-bg-subtle);
        border: 1px solid var(--bs-secondary-border-subtle);
    }
</style>

@code {

}
