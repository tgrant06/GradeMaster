@page "/notes/{Id:int}"

<TopPageHeader Style="font-size: 28px; top: 10px">Detail Note</TopPageHeader>

<ConfirmDialog @ref="_dialog" />

<section class="transform-stack-container">
    <div class="border-top animated-top-line" style="width: 100%; max-width: 50%; margin-top: 15px"></div>

    <div class="container animated-page-content">
        <div class="border-top generic-devider-line" style="margin-top: -1px"></div>
        <div class="col-12 col-md-12 py-3" style="max-width: 1200px;">
            <h2 style="margin-bottom: 11px; font-size: 34px;">
                    <strong class="enabled-text-selection">@Note.Title</strong>
                </h2>
            <CardSubTitle Class="enabled-text-selection" Style="font-size: 17px;">Color: @(Note.Color.Name + Note.Color.Symbol)</CardSubTitle>
            <CardSubTitle Class="enabled-text-selection enabled-text-selection-and-children" Style="margin-top: 6px;">
                @if (Note is { IsPinned: true, IsArchived: true })
                {
                    <span>Pinned📌 | Archived <i class="bi bi-archive"></i></span>
                }
                else if (Note.IsPinned)
                {
                    <span>Pinned📌</span>
                }
                else if (Note.IsArchived)
                {
                    <span>Archived <i class="bi bi-archive"></i></span>
                }
            </CardSubTitle>
        </div>

        <div class="pb-3 pt-1" style="margin-bottom: 50px; max-width: 1050px; padding: 0 4px;">
            <div class="row row-cols-1 row-cols-sm-1 row-cols-md-1 row-cols-lg-2">
                <div class="col mt-3" style="min-height: 169px; padding: 0 8px;">
                    <Card Style="height: 100%">
                        <CardBody Style="padding-right: 10px;">
                            <div>
                                <CardText Class="enabled-text-selection enabled-text-selection-and-children">
                                    <b class="enabled-text-selection">Tags:</b> <br class="enabled-text-selection" />
                                    @if (Note.Tags is null || Note.Tags.Length == 0)
                                    {
                                        <span>-</span>
                                    }
                                    else
                                    {
                                        foreach (var tag in NoteUtils.ToTagArray(Note.Tags))
                                        {
                                            @*@UIUtils.TruncateString(tag, 50)*@
                                            <NoteTagItem Text="@tag" />
                                        }
                                    }
                                </CardText>
                            </div>
                        </CardBody>
                    </Card>
                </div>
                <div class="col mt-3" style="min-height: 169px; padding: 0 8px;">
                    <div class="mb-3">
                        <Button @onclick="ShowNoteContent" Class="btn-translucient-v4 btn-show-content border-secondary-subtle" Style="width: 100%; font-size: 18px;" Disabled="@(string.IsNullOrWhiteSpace(Note.Content))">Show Content <Icon Name="IconName.ArrowDownCircle" /></Button>
                    </div>
                    <Card Style="height: calc(100% - 57px);">
                        <CardBody Style="display: inline-grid;">
                            <div style="align-self: center;">
                                <div class="mb-3">
                                    <CardText Class="border-bottom enabled-text-selection" Style="padding-bottom: 20px; margin-bottom: 6px;">
                                        <b class="enabled-text-selection">Updated at:</b> <br class="enabled-text-selection"/>@Note.UpdatedAt.ToString("f")
                                    </CardText>
                                </div>
                                <div>
                                    <CardText Class="enabled-text-selection" Style="padding-bottom: 2px;">
                                        <b class="enabled-text-selection">Created at:</b> <br class="enabled-text-selection"/>@Note.CreatedAt.ToString("f")
                                    </CardText>
                                </div>
                            </div>
                        </CardBody>
                    </Card>
                </div>
            </div>
        </div>

        <div class="border-top generic-devider-line" style="margin-top: 15px; opacity: 0.5;"></div>

        <div class="d-flex justify-content-between my-3" style="max-width: 1050px">
            <div>
                <Button Color="ButtonColor.Primary" @onclick="GoBack" Size="ButtonSize.Medium">
                    <Icon Name="IconName.ArrowLeft" /> Back
                </Button>
                <Button @ref="_copyButton" @onclick="CopyToClipboard" Class="btn-translucient-v4 border-secondary-subtle" Size="ButtonSize.Medium" Style="margin-left: 8px; padding-left: 10px; padding-right: 10px;" TooltipTitle="Copy Link">
                    <LoadingTemplate>
                        <Icon Name="IconName.CheckLg" Color="IconColor.Success"/>
                    </LoadingTemplate>
                    <ChildContent>
                        <Icon Name="IconName.Copy" />
                    </ChildContent>
                </Button>
            </div>
            <div>
                <Button Color="ButtonColor.Success" @onclick="EditNote" Size="ButtonSize.Medium">
                    Edit <Icon Name="IconName.PencilSquare"/>
                </Button>
                <Button Color="ButtonColor.Danger" @onclick="DeleteNoteAsync" Size="ButtonSize.Medium" TooltipTitle="Delete" Style="margin-left: 8px; padding-left: 10px; padding-right: 10px;">
                    <Icon Name="IconName.Trash"/>
                </Button>
            </div>
        </div>
        
        @if (!string.IsNullOrWhiteSpace(Note.Content))
        {
            <div class="border-top generic-devider-line" style="opacity: 0.5;"></div>
            <div class="topPageSubHeader border-bottom" style="max-width: 1074px; margin-right: -12px; margin-left: -12px;">
                <h5>@Note.Title | @(Note.Color.Name + Note.Color.Symbol)</h5>
                <div class="topPageSubHeaderSideBlock"></div>
            </div>
        }
        else
        {
            <div class="border-top generic-devider-line" style="opacity: 0.5;"></div>
        }

        @* <div class="border-top generic-devider-line" style="opacity: 0.5;"></div> *@
        
        <div class="pt-3" style="margin-bottom: 60px; margin-top: 10px; max-width: 1050px;">
            @if (string.IsNullOrWhiteSpace(Note.Content))
            {
                <h3 class="enabled-text-selection noteContentHead" style="text-align: center; margin-bottom: 20px; /* scroll-margin-top: 121px; */">Content:</h3>
                <p style="text-align: center;">The content of this note is empty.</p>
            }
            else
            {
                <h3 id="noteContentHeader" class="enabled-text-selection noteContentHead" style="text-align: center; margin-bottom: 20px; /* scroll-margin-top: 121px; */">Content:</h3>
                <Card Style="max-width: 1050px">
                    <CardBody>
                        <Markdown Id="markdownContent" TableCssClass="table table-striped table-hover table-bordered" Class="enabled-text-selection enabled-text-selection-and-children">@Note.Content</Markdown>
                    </CardBody>
                </Card>
            }
        </div>
    </div>
</section>

<style>
    .tooltip {
        display: none !important;
    }

    .gm-note-tag-item {
        --bs-badge-font-size: 0.92em;
        --bs-badge-font-weight: 400;
    }

    #markdownContent a {
        text-underline-offset: 0.1em;
    }

    #markdownContent img {
        max-width: 100%;
        border-radius: 5px;
        /* border: 1px solid var(--bs-secondary-border-subtle); */
    }

    #markdownContent table {

    }

    pre:has(code) {
        padding: 12px;
        border-radius: 5px;
        background-color: var(--bs-secondary-bg-subtle);
        border: 1px solid var(--bs-secondary-border-subtle);
    }
</style>

@if (string.IsNullOrWhiteSpace(Note.Content))
{
    <style>
        #scrollToTopButton {
            display: none !important;
        }
    </style>
}

<script>
    window.scrollTo({ top: 0, behavior: 'auto' });
</script>

@code {

}
